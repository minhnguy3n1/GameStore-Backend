// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  password         String
  firstName        String
  lastName         String?
  email            String    @unique
  isEmailValidated Boolean   @default(false)
  createdAt        DateTime  @default(now())
  stripeCustomerId String?
  avatarUrl        String?
  roles            String[]  @default(["Customer"])
  Invoice          Invoice[]
}

model Product {
  id          Int    @id @default(autoincrement())
  productName String @unique

  platformId    Int
  platform      Platform?       @relation(fields: [platformId], references: [id])
  categoryId    Int
  category      Category?       @relation(fields: [categoryId], references: [id])
  createdAt     DateTime        @default(now())
  image         String
  description   String
  price         Float
  available     Int             @default(0)
  stockId       Int
  totalReview   Int?            @default(0)
  totalRating   Float?          @default(0)
  stockStatus   StockStatus     @relation(fields: [stockId], references: [id])
  rating        Rating[]
  review        Review[]
  invoiceDetail InvoiceDetail[]
  Code          Code[]

  @@index([productName])
}

model Platform {
  id           Int       @id @default(autoincrement())
  platformName String    @unique
  product      Product[]
}

model Category {
  id           Int       @id @default(autoincrement())
  categoryName String    @unique
  product      Product[]
}

model Code {
  code      String[]
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  @@id([productId])
}

model StockStatus {
  id         Int       @id @default(autoincrement())
  statusName String
  product    Product[]
}

model Invoice {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  total         Float
  userId        Int
  user          User            @relation(fields: [userId], references: [id])
  status        String?
  invoiceDetail InvoiceDetail[]
}

model InvoiceDetail {
  amount    Int
  price     Float
  code      String[]
  invoiceId Int
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])

  @@id([invoiceId, productId])
}

model Review {
  id           Int      @id @default(autoincrement())
  comment      String
  isPurchased  Boolean  @default(false)
  rating       Int      @default(0)
  postedAt     DateTime @default(now())
  productId    Int
  product      Product  @relation(fields: [productId], references: [id])
  userFullName String
  avatarUrl    String?
}

model Rating {
  name      String
  starCount Int     @default(0)
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@id([name, productId])
}
