// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  password         String
  firstName        String
  lastName         String
  email            String    @unique
  isEmailValidated Boolean   @default(false)
  dateOfBirth      DateTime  @default(now())
  createdAt        DateTime  @default(now())
  stripeCustomerId String?
  avatarUrl        String?
  roles            String[]  @default(["Customer"])
  Invoice          Invoice[]
  Review           Review[]
}

model Product {
  id          Int    @id @default(autoincrement())
  productName String @unique

  platformId Int
  platform   Platform? @relation(fields: [platformId], references: [id])

  categoryId    Int
  category      Category?       @relation(fields: [categoryId], references: [id])
  ProductOption ProductOption[]
  createdAt     DateTime        @default(now())
  image         String
  description   String
  price         Float
  available     Int
  stockId       Int
  stockStatus   StockStatus     @relation(fields: [stockId], references: [id])
  Rating        Rating[]
  Review        Review[]

  @@index([productName])
}

model Platform {
  id           Int       @id @default(autoincrement())
  platformName String    @unique
  Product      Product[]
}

model Category {
  id           Int       @id @default(autoincrement())
  categoryName String    @unique
  Product      Product[]
}

model Code {
  id              Int           @id @default(autoincrement())
  code            String[]
  productOptionId Int
  productOption   ProductOption @relation(fields: [productOptionId], references: [id])
}

model ProductOption {
  id         Int     @id @default(autoincrement())
  optionName String
  productId  Int
  product    Product @relation(fields: [productId], references: [id])

  Code Code[]
}

model StockStatus {
  id         Int       @id @default(autoincrement())
  statusName String
  product    Product[]
}

model Invoice {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  total         Int
  userId        Int
  user          User            @relation(fields: [userId], references: [id])
  status        String?
  InvoiceDetail InvoiceDetail[]
}

model InvoiceDetail {
  id        Int      @id @default(autoincrement())
  amount    Int
  Price     Float
  Code      String[]
  invoiceId Int
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
}

model Review {
  id          Int      @id @default(autoincrement())
  comment     String
  isPurchased Boolean  @default(false)
  rating      Int
  postedAt    DateTime @default(now())
  productId   Int
  Product     Product  @relation(fields: [productId], references: [id])
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
}

model Rating {
  id        Int     @id @default(autoincrement())
  name      String
  total     Int
  productId Int
  Product   Product @relation(fields: [productId], references: [id])
}
